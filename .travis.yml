# linux dist=xenial
# -> https://packages.ubuntu.com/
language: cpp

jobs:
  include:
  - os: linux
    dist: xenial
    compiler: gcc
    cache:
      apt: true
    addons:
      apt:
        sources:
        - sourceline: 'deb https://apt.kitware.com/ubuntu/ xenial main'
          key_url: 'https://apt.kitware.com/keys/kitware-archive-latest.asc'
        - sourceline: 'deb https://apt.kitware.com/ubuntu/ xenial-rc main'
        packages:
        - cmake
        
  - os: linux
    dist: xenial
    compiler: clang
    cache:
      apt: true
    addons:
      apt:
        sources:
        - sourceline: 'deb https://apt.kitware.com/ubuntu/ xenial main'
          key_url: 'https://apt.kitware.com/keys/kitware-archive-latest.asc'
        - sourceline: 'deb https://apt.kitware.com/ubuntu/ xenial-rc main'
        packages:
        - cmake
  - os: osx
    compiler: clang
    cache:
      directories:
        - $HOME/Library/Caches/Homebrew
        - /usr/local/Homebrew


before_cache:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew cleanup; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then find /usr/local/Homebrew \! -regex ".+\.git.+" -delete; fi

env:
  global:
    - TRAVIS_CI=true
    - secure: "W7++isBzG0Lsq3ktAIVA4FZ5O2Hn1JptWNBjDlDrxdUxM/g5HP0R8qxC58HRVEjWI9vCU7YgcsmxPhuSNdgFYhn84p4dcwU5N8PlTfz4HfpbARUu5PYlO8l8Qeag/PutDTTai2bJAhRruNvgP1NEz9Oq/KG6aHHNcVxZjP2iSo8="
    - BINTRAY_TOKEN=${BINTRAY_TOKEN}

before_install:
  - echo $TRAVIS_OS_NAME
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        echo "check cmake v3.13...";
        sudo apt-cache show cmake -a | grep Version;
        sudo ls -l /usr/local/cmake-*/bin/;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        sudo apt-get update -qq;
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        export OPENSSL_ROOT_DIR=/usr/local/opt/openssl/; export HOMEBREW_NO_AUTO_UPDATE=1;
    fi

install:
  - echo $TRAVIS_OS_NAME
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        sudo apt-get install -y libwxbase3.0 libwxgtk3.0-dev libwxsqlite3-3.0-dev libxml2-dev libcurl4-openssl-dev libssl-dev ninja-build;
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        brew install gnu-sed wxmac cmake ninja openssl;
    fi

script:
  - echo $TRAVIS_OS_NAME
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        mkdir build;
        /usr/bin/cmake --version;
        cd build && /usr/bin/cmake -G "Ninja" .. && ninja;
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then sh ninja_rebuild.sh; fi

branches:
  only:
    - master

notifications:
  email:
    on_success: change
    on_failure: always

after_success:
  - echo $TRAVIS_OS_NAME
